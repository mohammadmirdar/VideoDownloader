[versions]

# Project Environment Versions
minSdk = "21"
targetSdk = "36"
jvmTarget = "11"
compileSdk = "36"

versionCodeTv = "40405061"
versionNameTv = "1.0.0"

# Plugin Versions
agp = "8.11.0"
kotlin = "2.2.0"
detekt = "1.23.8"
crashlytics = "3.0.4"
detekt-compose = "0.4.22"
google-services = "4.4.3"
android-library = "8.11.0"
aparat-changelog = "1.0.0"
ksp = "2.2.0-2.0.2"

# Test Library Versions
junit = "4.13.2"
konsist = "0.17.3"
uiautomator = "2.3.0"
espresso-core = "3.6.1"
androidx-test = "2.2.0"
androidx-junit = "1.2.1"
androidx-junit-runner = "1.6.2"
mockito-kotlin = "5.4.0"
mockito-android = "5.18.0"
mockito-inline = "5.2.0"
profileinstaller = "1.4.1"
baseline-profile = "1.3.4"
benchmark-macro-junit4 = "1.3.4"
mock-web-server = "4.12.0"
coroutine-test = "1.10.2"
faker = "2.0.1"
turbine = "1.2.1"
mockk = "1.14.4"

# BOM Versions
ok-http = "4.12.0"
firebase-bom = "33.16.0"
compose-bom = "2025.08.00"

# Library Versions
coil = "3.3.0"
room = "2.7.2"
hilt = "2.56.2"
ktor = "3.2.1"
core = "1.16.0"
arrow = "2.1.2"
media3 = "1.7.1"
moshi = "1.15.2"
timber = "5.0.1"
splash = "1.0.1"
qr_code = "1.6.2"
compose = "1.8.3"
chucker = "4.1.0"
retrofit = "3.0.0"
core-ktx = "1.16.0"
coroutine = "1.10.2"
datastore = "1.1.7"
lifecycle = "2.9.1"
material3 = "1.3.2"
hilt-compose = "1.2.0"
accompanist = "0.37.3"
installreferrer = "2.2"
firebase-iid = "21.1.0"
ads-identifier = "18.2.0"
activity-compose = "1.10.1"
tv-material = "1.0.0"
persistent-cookie = "v1.0.1"
navigation-compose = "2.9.3"
tv-foundation = "1.0.0-alpha12"
immutable-collections = "0.4.0"
serialization = "1.9.0"
hiltWork = "1.2.0"
hiltCommon = "1.2.0"
jetbrainsKotlinJvm = "2.2.0"
material = "1.10.0"
junitKtx = "1.2.1"
foundationAndroid = "1.8.3"
materialVersion = "1.12.0"
appcompat = "1.6.1"
adivery = "4.8.5"
fetch = "3.4.1"
dagger = "2.57"
hiltAndroid = "1.2.0"


[libraries]
# Test Libraries
junit = { module = "junit:junit", version.ref = "junit" }
konsist = { module = "com.lemonappdev:konsist", version.ref = "konsist" }
androidx-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-junit" }
androidx-test = { module = "androidx.arch.core:core-testing", version.ref = "androidx-test" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidx-junit-runner" }
uiautomator = { module = "androidx.test.uiautomator:uiautomator", version.ref = "uiautomator" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito-kotlin" }
mockito-android = { module = "org.mockito:mockito-android", version.ref = "mockito-android" }
mockito-inline = { module = "org.mockito:mockito-inline", version.ref = "mockito-inline" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito-android" }
espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso-core" }
profileinstaller = { module = "androidx.profileinstaller:profileinstaller", version.ref = "profileinstaller" }
benchmark-macro-junit4 = { module = "androidx.benchmark:benchmark-macro-junit4", version.ref = "benchmark-macro-junit4" }
turbine = {module = "app.cash.turbine:turbine", version.ref = "turbine"}
androidx-junit-ktx = { group = "androidx.test.ext", name = "junit-ktx", version.ref = "junitKtx" }
hilt-android-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }
coroutine-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutine-test" }
mockK = { module = "io.mockk:mockk", version.ref = "mockk" }

# Libraries
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "core-ktx" }
coil = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-network = { module = "io.coil-kt.coil3:coil-network-okhttp", version.ref = "coil" }
androidx-core = { module = "androidx.core:core", version.ref = "core" }
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
splash = { module = "androidx.core:core-splashscreen", version.ref = "splash" }
gradle-api = { module = "com.android.tools.build:gradle-api", version.ref = "agp" }
qrcode = { module = "com.github.alexzhirkevich:custom-qr-generator", version.ref = "qr_code" }
detekt-compose = { module = "io.nlopez.compose.rules:detekt", version.ref = "detekt-compose" }
coroutine = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutine" }
faker = { module = "com.github.blocoio:faker", version.ref = "faker" }
mock-web-server = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mock-web-server" }
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
datastore-preference = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }
installreferrer = { module = "com.android.installreferrer:installreferrer", version.ref = "installreferrer" }
persistent-cookie = { module = "com.github.franmontiel:PersistentCookieJar", version.ref = "persistent-cookie" }
drawablepainter = { module = "com.google.accompanist:accompanist-drawablepainter", version.ref = "accompanist" }
detekt-rules-libraries = { module = "io.gitlab.arturbosch.detekt:detekt-rules-libraries", version.ref = "detekt" }
ads-identifier = { module = "com.google.android.gms:play-services-ads-identifier", version.ref = "ads-identifier" }
detekt-rules-ruleauthors = { module = "io.gitlab.arturbosch.detekt:detekt-rules-ruleauthors", version.ref = "detekt" }
kotlin-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "immutable-collections" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization"}

ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-serialization-gson = { module = "io.ktor:ktor-serialization-gson", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
androidx-hilt-common = { module = "androidx.hilt:hilt-common", version.ref = "hiltAndroid" }

tv-material = { module = "androidx.tv:tv-material", version.ref = "tv-material" }
tv-foundation = { module = "androidx.tv:tv-foundation", version.ref = "tv-foundation" }

compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "material3" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose-bom" }
compose-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "compose" }
compose-activity = { module = "androidx.activity:activity-compose", version.ref = "activity-compose" }
compose-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "navigation-compose" }

lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycle" }
lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }

hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt" }
hilt-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hilt-compose" }
hilt-work = { module = "androidx.hilt:hilt-work", version.ref = "hiltWork" }
hilt-common = { module = "androidx.hilt:hilt-common", version.ref = "hiltCommon" }
androidx-hilt-compiler = { group = "androidx.hilt", name = "hilt-compiler", version.ref = "hiltWork" }

okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "ok-http" }
okhttp-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "ok-http" }

firebase-analytics = { module = "com.google.firebase:firebase-analytics-ktx" }
firebase-messaging = { module = "com.google.firebase:firebase-messaging-ktx" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics-ktx" }
firebase-iid = { module = "com.google.firebase:firebase-iid", version.ref = "firebase-iid" }
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase-bom" }

arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
arrow-retrofit = { module = "io.arrow-kt:arrow-core-retrofit", version.ref = "arrow" }

retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-converter = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }

exoplayer-hls = { module = "androidx.media3:media3-exoplayer-hls", version.ref = "media3" }
exoplayer-ima = { module = "androidx.media3:media3-exoplayer-ima", version.ref = "media3" }

media3-ui = { module = "androidx.media3:media3-ui", version.ref = "media3" }
media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "media3" }
media3-ui-compose = { module = "androidx.media3:media3-ui-compose", version.ref = "media3" }
media3-common = { module = "androidx.media3:media3-common", version.ref = "media3" }

moshi = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
moshi-compiler = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi" }

chucker-debug = { module = "com.github.chuckerteam.chucker:library", version.ref = "chucker" }
chucker-release = { module = "com.github.chuckerteam.chucker:library-no-op", version.ref = "chucker" }

room = { module = "androidx.room:room-runtime", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
androidx-foundation-android = { group = "androidx.compose.foundation", name = "foundation-android", version.ref = "foundationAndroid" }
material = { group = "com.google.android.material", name = "material", version.ref = "materialVersion" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }

adivery = { module = "com.adivery:sdk", version.ref = "adivery" }
kotlin-stlib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
tonyo-fetch = { module = "com.github.tonyofrancis.Fetch:fetch2", version.ref = "fetch" }
dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }

[plugins]
android-test = { id = "com.android.test", version.ref = "agp" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
android-library = { id = "com.android.library", version.ref = "android-library" }
crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "crashlytics" }
baselineprofile = { id = "androidx.baselineprofile", version.ref = "baseline-profile" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
google-services = { id = "com.google.gms.google-services", version.ref = "google-services" }
aparat-changelog = { id = "com.aparat.plugin.changelog", version.ref = "aparat-changelog" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
jetbrains-kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "jetbrainsKotlinJvm" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }

[bundles]
room = ["room", "room-ktx"]
arrow = ["arrow-core", "arrow-retrofit"]
okhttp = ["okhttp", "okhttp-interceptor"]
compose-tv = ["tv-foundation", "tv-material"]
retrofit = ["retrofit", "retrofit-converter"]
media3 = ["media3-exoplayer", "media3-ui", "exoplayer-hls", "exoplayer-ima", "media3-ui-compose", "media3-common"]
compose = ["compose-runtime", "compose-activity", "compose-navigation", "lifecycle-viewmodel-compose", "compose-material3", "compose-ui-tooling-preview"]


